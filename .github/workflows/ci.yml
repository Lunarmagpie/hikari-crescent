name: ci
on: [push, pull_request]
jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
      - name: Install Nox
        run: |
          pip install nox
      - run: nox -s lint

  typechecking:
    name: "typechecking and docs"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: "x64"
      - name: Install Poetry
        run: |
          pip install poetry
      - name: Set up cache
        uses: actions/cache@v3
        id: cache
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Configure poetry
        run: poetry config virtualenvs.in-project true

      - name: Ensure cache is healthy
        if: steps.cache.outputs.cache-hit == 'true'
        run: |
          # `timeout` is not available on macOS, so we define a custom function.
          [ "$(command -v timeout)" ] || function timeout() { perl -e 'alarm shift; exec @ARGV' "$@"; }

          # Using `timeout` is a safeguard against the Poetry command hanging for some reason.
          timeout 10s poetry run pip --version || rm -rf .venv

      - name: run
        run: |
          poetry install
          poetry run nox -s mypy pyright docs
        env:
          CI: True
